global
    log stdout  format raw  local0  debug

    daemon
    maxconn 256
    #stats socket /tmp/socket
    #server-state-file /tmp/server_state

    #user x
    group www-data

    # Default SSL material locations
    ca-base /etc/ssl/certs
    crt-base /etc/ssl/private

    ssl-default-bind-ciphers ECDH+AESGCM:DH+AESGCM:ECDH+AES256:DH+AES256:ECDH+AES128:DH+AES:ECDH+3DES:DH+3DES:RSA+AESGCM:RSA+AES:RSA+3DES:!aNULL:!MD5:!DSS
    ssl-default-bind-options no-sslv3
    tune.ssl.default-dh-param 2048

    max-spread-checks 10s
    spread-checks 5

defaults
    log global
    mode http
    option httplog
    option dontlognull
    timeout check 5s
    timeout connect 4s
    timeout client 17s
    timeout server 17s
    balance roundrobin

    # never fail on address resolution
    default-server init-addr libc,none

resolvers docker_dns
    parse-resolv-conf
    accepted_payload_size 8192

# Redirect _everything_ to HTTPS
frontend http-frontend
    bind 0.0.0.0:80
    bind :::80

    redirect scheme https code 301

frontend idp-http
    bind *:443  ssl  crt /etc/ssl/eidas.pem  alpn h2,http/1.1
    stats enable
    timeout http-request 10s
    timeout http-keep-alive 4s

    option forwardfor
    http-request set-header X-Forwarded-Proto https
    http-request set-header X-Forwarded-Host %[req.hdr(Host)]

    # The information is intended for a single user and must not
    # be cached by a shared cache and should always be revalidated.
    http-response set-header Cache-Control "no-cache, no-store, must-revalidate"
    http-response set-header Pragma "no-cache"
    http-response set-header Expires "0"

    # log Origin
    http-request capture req.hdr(Origin) len 80

    # allow the login app running on html.eduid.docker to speak with the IdP API endpoints on idp.eduid.docker
    # save request origin
    http-request set-var(txn.origin) req.hdr(Origin)
    acl known_host var(txn.origin) -i "https://dashboard.eduid.docker"
    acl known_host var(txn.origin) -i "https://eidas.eduid.docker"
    acl known_host var(txn.origin) -i "https://html.eduid.docker"
    # lie about origin to backend if origin matches a known host
    http-request set-header Origin "https://eidas.eduid.docker" if known_host
    # set default allow origin
    http-response set-header Access-Control-Allow-Origin "https://eidas.eduid.docker"
    # replace allow origin header if it matches a known host
    http-response set-header Access-Control-Allow-Origin %[var(txn.origin)] if known_host
    # other access control headers needed
    http-response set-header Access-Control-Allow-Credentials "true"
    http-response set-header Access-Control-Allow-Headers "Content-Type, X-Requested-With, Cache-Control, Pragma, Expires, Cookie, Set-Cookie"

    default_backend eidas

backend eidas
    server eidas1 eduid_eidas_1:8080 check resolvers docker_dns  init-addr none

frontend LB-http
    bind *:9000
    default_backend LB

backend LB
    stats enable
    #stats hide-version
    stats uri /haproxy_stats
