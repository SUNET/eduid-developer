---
eduid:
    api:
        common:
            debug: true
            schema: 'http'
            log_level: 'DEBUG'
            log_format: '{asctime} | {levelname:7} | {name} | {module:10} | {message}'
            environment: 'dev'
        scimapi:
            mongo_uri: 'mongodb://eduid_scimapi:eduid_scimapi_pw@mongodb.eduid_dev'
            protocol: 'https'
            server_name: 'scimapi.eduid.docker'
            application_root: '/scim'
            neo4j_uri: 'bolt://neo4j:docker@neo4jdb.eduid_dev:7687'
            neo4j_config:
                encrypted: false
            authorization_mandatory: true
            keystore_path: /opt/eduid/eduid-scimapi/etc/keystore.jwks
            signing_key_id: scimapi-dev-202106
            authorization_token_expire: 1440
            data_owners:
              'eduid.se':
                notify: ['http://turq:13085/']
            logging_config:
                loggers:
                    'eduid_scimapi.notifications':
                        level: 'INFO'
                        handlers: [notifications]
                    'neo4j':
                        level: 'INFO'
                handlers:
                    notifications:
                       class: 'logging.handlers.RotatingFileHandler'
                       formatter: 'default'
                       filename: '/var/log/eduid/eduid-scimapi-notifications.log'
                       maxBytes: 1024
                       backupCount: 10
        vccs:
            add_creds_password_key_handle: 1
            mongo_uri: 'mongodb://mongodb.eduid_dev'
            yhsm_device: 'soft_hasher:/opt/eduid/vccs/soft_hasher.yaml'
        auth_server:
          environment: dev
          log_level: DEBUG
          application_root: /auth
          auth_token_issuer: api.eduid.docker
          auth_flows:
            - ConfigFlow
          auth_token_audience: eduid.docker
          keystore_path: /opt/sunet/auth-server/etc/keystore.jwks
          signing_key_id: auth-server-dev-221011
          client_keys:
            devkey:
              proof:
                method: jws
              jwk:
                kty: EC
                kid: devkey
                crv: P-256
                x: "LsX8Jl-DwZfJjgkwvTiRu5nqMNYcwh29hdkDtCsj26w"
                y: "hifFMvRh_moHOvBLx58JokS0LMjjo3Ww5SfjzFVSVSA"
              claims:
                scopes:
                  - eduid.se
                test_claim: "this is my test claim"
    webapp:
        common:
            cors_origins: ['.*\.eduid.docker$', '^eduid.docker$']
            devel_mode: yes
            # enable disable debug mode
            debug: yes
            # the domain for the session cookie. If this is not set, the cookie will
            # be valid for all subdomains of SERVER_NAME.
            session_cookie_name: sessid
            session_cookie_domain: .eduid.docker
            session_cookie_secure: yes
            session_cookie_samesite: None
            # The URL scheme that should be used for URL generation if no URL scheme is
            # available. This defaults to http
            preferred_url_scheme: https
            # CORS
            cors_origins: '.*\.eduid\.docker$'
            # Redis config
            redis_config:
              host: redis.eduid_dev
            saml2_logout_redirect_url: https://html.eduid.docker/
            token_service_url: https://dashboard.eduid.docker/services/authn
            # Configure backdoor for UI testing
            magic_cookie: magiccookie
            magic_cookie_name: magiccookie
            # NEW
            celery:
                accept_content: ["application/json"]
                broker_url: redis://redis.eduid_dev:6379/1
                result_backend: redis://redis.eduid_dev:6379/1
                broker_transport_options:
                    # backwards incompatible setting that the documentation says will be the default in the future
                    fanout_prefix: true
                # Avoid broken connections across firewall by disabling pool
                # http://docs.celeryproject.org/en/latest/configuration.html#broker-pool-limit
                #BROKER_POOL_LIMIT: 0
                task_routes:
                  'eduid_am.*': {'queue': 'am'}
                  'eduid_msg.*': {'queue': 'msg'}
                  'eduid_lookup_mobile.*': {'queue': 'lookup_mobile'}
            available_languages:
                en: English
                sv: Svenska
            mail_default_from: info@eduid.se
            eduid_site_name: eduID Developer
            eduid_site_url: https://html.eduid.docker
            eduid_static_url: https://html.eduid.docker/static/
            static_url: https://html.eduid.docker/static/
            dashboard_url: https://dashboard.eduid.docker/profile/
            reset_passwd_url: https://dashboard.eduid.docker/services/security/reset-password
            # set absolute URL so it can be included in emails
            signup_url: https://signup.eduid.docker/register/
            no_authn_urls:
              - "^/status/healthy$"
              - "^/status/sanity-check$"
            action_plugins:
              - tou
              - mfa
            # ENVIRONMENT=(dev|staging|pro)
            environment: 'dev'
            tou_version: 2016-v1
            secret_key: supersecretkey
            fido2_rp_id: eduid.docker
            u2f_app_id: https://dashboard.dev.eduid.se
            errors_url_template: 'https://html.eduid.docker/errors?code={ERRORURL_CODE}&ts={ERRORURL_TS}&rp={ERRORURL_RP}&tid={ERRORURL_TID}&ctx={ERRORURL_CTX}'
            logging_config:
              loggers:
                'eduid.webapp.common.session':
                  level: 'INFO'
                'eduid.webapp.common.authn.middleware':
                  level: 'INFO'
        authn:
            server_name: dashboard.eduid.docker
            application_root: /services/authn
            mongo_uri: mongodb://eduid_authn:eduid_authn_pw@mongodb.eduid_dev
            logger_name: authn
            log_level: DEBUG
            # SAML2 and SP config
            saml2_login_redirect_url: /
            saml2_settings_module: /opt/eduid/etc/saml2_settings.py
            saml2_user_main_attribute: eduPersonPrincipalName
            saml2_strip_saml_user_suffix: "@local.eduid.se"
            signup_authn_success_redirect_url: https://dashboard.eduid.docker
            signup_authn_failure_redirect_url: https://html.eduid.docker/
            unsolicited_response_redirect_url: https://html.eduid.docker
            safe_relay_domain: eduid.docker
        ladok:
            server_name: dashboard.eduid.docker
            application_root: /services/ladok
            logger_name: ladok
            log_level: DEBUG
            mongo_uri: mongodb://eduid_ladok:eduid_ladok_pw@mongodb.eduid_dev
            ladok_client:
              url: http://localhost/NOTSET
              dev_universities:
                'Uni-A':
                  sv: 'Universitet A'
                  en: 'University A'
                'Uni-B':
                  sv: 'Universitet B'
                  en: 'University B'
                'Uni-C':
                  sv: 'Universitet C'
                  en: 'University C'
            dev_fake_users_in: ['Uni-B']
        letter_proofing:
            server_name: dashboard.eduid.docker
            application_root: /services/letter-proofing
            logger_name: letter_proofing
            log_level: DEBUG
            mongo_uri: mongodb://eduid_idproofing_letter:eduid_idproofing_letter_pw@mongodb.eduid_dev
            # Setting ekopost_debug_pdf_path means that the other EKOPOST settings will be ignored
            # and that the pdf only will be written to to the supplied path, not sent to the letter service.
            ekopost_debug_pdf_path: /opt/eduid/run/debug_letter.pdf
            ekopost_api_uri: https://api.ekopost.se
            ekopost_api_verify_ssl: yes
            ekopost_api_user: ekopost_user
            ekopost_api_pw: ekopost_pw
        oidc_proofing:
            server_name: dashboard.eduid.docker
            application_root: /services/oidc-proofing
            logger_name: oidc_proofing
            log_level: DEBUG
            client_registration_info:
                client_id: client1
                client_secret: abcdef
            provider_configuration_info:
                issuer: http://turq:13085/op/
            mongo_uri: mongodb://eduid_oidc_proofing:eduid_oidc_proofing_pw@mongodb.eduid_dev
        orcid:
            server_name: dashboard.eduid.docker
            application_root: /services/orcid
            logger_name: orcid
            log_level: DEBUG
            client_registration_info:
                client_id: client1
                client_secret: abcdef
            provider_configuration_info:
                issuer: https://sandbox.orcid.org
            mongo_uri: mongodb://eduid_orcid:eduid_orcid_pw@mongodb.eduid_dev
            orcid_verify_redirect_url: /profile/accountlinking
        eidas:
            server_name: eidas.eduid.docker
            application_root: /
            logger_name: eidas
            log_level: DEBUG
            mongo_uri: mongodb://eduid_eidas:eduid_eidas_pw@mongodb.eduid_dev
            # SAML2 and SP config
            saml2_settings_module: /opt/eduid/etc/saml2_settings.py
            safe_relay_domain: eduid.docker
            token_verify_redirect_url: https://dashboard.eduid.docker/profile/settings/advanced-settings
            identity_verify_redirect_url: https://dashboard.eduid.docker/profile/verify-identity/
            freja_idp: http://dev.test.swedenconnect.se/idp
            foreign_identity_idp: https://dev.connector.swedenconnect.se/eidas
            frontend_action_finish_url:
              eidasVerifyIdentity: https://dashboard.eduid.docker/profile/ext-return/{app_name}/{authn_id}
              eidasVerifyCredential: https://dashboard.eduid.docker/profile/ext-return/{app_name}/{authn_id}
              loginMfaAuthn: https://html.eduid.docker/login/ext-return/{app_name}/{authn_id}
              resetpwMfaAuthn: https://html.eduid.docker/login/ext-return/{app_name}/{authn_id}
        lookup_mobile_proofing:
            server_name: dashboard.eduid.docker
            application_root: /services/lookup-mobile-proofing
            logger_name: lookup_mobile_proofing
            log_level: DEBUG
            mongo_uri: mongodb://eduid_lookup_mobile_proofing:eduid_lookup_mobile_proofing_pw@mongodb.eduid_dev
        support:
            server_name: support.eduid.docker
            logger_name: support
            log_level: DEBUG
            mongo_uri: mongodb://eduid_support:eduid_support_pw@mongodb.eduid_dev
            token_service_url_logout: https://dashboard.eduid.docker/services/authn/logout
            support_personnel:
              - mojud-dosiv
              - sadug-katoh
              - bamus-mutod
        personal_data:
            server_name: dashboard.eduid.docker
            application_root: /services/personal-data
            mongo_uri: mongodb://eduid_personal_data:eduid_personal_data_pw@mongodb.eduid_dev
            log_level: DEBUG
            logger_name: personal_data
        email:
            server_name: dashboard.eduid.docker
            application_root: /services/email
            mongo_uri: mongodb://eduid_email:eduid_email_pw@mongodb.eduid_dev
            log_level: DEBUG
            logger_name: email
            email_verify_redirect_url: /profile/emails
        phone:
            server_name: dashboard.eduid.docker
            application_root: /services/phone
            mongo_uri: mongodb://eduid_phone:eduid_phone_pw@mongodb.eduid_dev
            log_level: DEBUG
            logger_name: phone
            phone_verification_timeout: 7200
        group_management:
            server_name: dashboard.eduid.docker
            application_root: /services/group-management
            mongo_uri: mongodb://eduid_group_management:eduid_group_management_pw@mongodb.eduid_dev
            neo4j_uri: 'bolt://neo4j:docker@neo4jdb.eduid_dev:7687'
            neo4j_config:
                encrypted: false
            log_level: DEBUG
            logger_name: group_management
        svipe_id:
            server_name: dashboard.eduid.docker
            application_root: /services/svipe-id
            mongo_uri: mongodb://eduid_svipe_id:eduid_svipe_id_pw@mongodb.eduid_dev
            log_level: DEBUG
            logger_name: svipe_id
            svipe_client:
                client_id: 'client_id'
                client_secret: 'client_secret'
                issuer: https://api.svipe.com/oidc/v1/
                acr_values: ["face_present"]
                scopes: ["openid", "document"]
            proofing_redirect_url:  https://dashboard.eduid.docker/profile/verify-identity/
        security:
            server_name: dashboard.eduid.docker
            application_root: /services/security
            mongo_uri: mongodb://eduid_security:eduid_security_pw@mongodb.eduid_dev
            log_level: DEBUG
            logger_name: security
            vccs_url: 'http://vccs:8080/'
            password_length: 12
            password_entropy: 25
            chpass_reauthn_timeout: 120
            chpass_old_password_needed: false
            u2f_max_allowed_tokens: 50
            u2f_max_description_length: 64
            u2f_valid_facets:
                - https://dashboard.dev.eduid.se
                - https://idp.dev.eduid.se
            webauthn_attestation: 'direct'
        signup:
            server_name: signup.eduid.docker
            application_root: /services/signup
            mongo_uri: mongodb://eduid_signup:eduid_signup_pw@mongodb.eduid_dev
            log_level: DEBUG
            logger_name: signup
            password_length: 10
            vccs_url: 'http://vccs:8080/'
            tou_url: not_used_remove_me_after_config_model_update
            signup_authn_url: https://dashboard.eduid.docker/services/authn/signup-authn
            default_finish_url: https://www.eduid.se/
            # These keys are for signup.eduid.docker
            recaptcha_public_key: 6Lf5rCETAAAAAAW6UP4o59VSNEWG7RrzY_b5uH_M
            recaptcha_private_key: 6Lf5rCETAAAAAAjQbw1-3j_U2xTZSrDYXlWjBQxt
            students_link: https://www.eduid.se/index.html
            technicians_link: https://www.eduid.se/tekniker.html
            staff_link: https://www.eduid.se/personal.html
            faq_link: https://www.eduid.se/faq.html
            am_relay_for_override: eduid_signup
        jsconfig:
            # this is configuration for the flask app serving the jsconfig microservice
            application_root: /services/jsconfig
            log_level: DEBUG
            logger_name: jsconfig
            fix_dashboard_uppercase_config: false
            fix_dashboard_available_languages: true
            fix_signup_uppercase_config: false
            fix_signup_available_languages: false
            jsapps:
              ### this is the configuration for the js apps, that is sent by the jsconfig
              ### microservice to the js apps.
              ### Take care not to put any sensitive data here.
              # Shared config
              debug: yes
              environment: dev
              static_faq_url: https://html.eduid.docker/faq.html
              # Dashboard config
              available_languages:
                  en: English
                  sv: Svenska
              dashboard_url: https://dashboard.eduid.docker/profile/
              personal_data_url: https://dashboard.eduid.docker/services/personal-data/
              emails_url: https://dashboard.eduid.docker/services/email/
              mobile_url: https://dashboard.eduid.docker/services/phone/
              phone_url: https://dashboard.eduid.docker/services/phone/
              oidc_proofing_url: https://dashboard.eduid.docker/services/oidc-proofing/proofing/
              ladok_url: https://dashboard.eduid.docker/services/ladok/
              lookup_mobile_proofing_url: https://dashboard.eduid.docker/services/lookup-mobile-proofing/proofing/
              letter_proofing_url: https://dashboard.eduid.docker/services/letter-proofing/
              security_url: https://dashboard.eduid.docker/services/security/
              token_service_url: https://dashboard.eduid.docker/services/authn/
              authn_url: https://dashboard.eduid.docker/services/authn/
              oidc_proofing_freja_url: https://dashboard.eduid.docker/services/oidc-proofing/freja/proofing/
              orcid_url: https://dashboard.eduid.docker/services/orcid/
              group_mgmt_url: https://dashboard.eduid.docker/services/group-management/
              eidas_url: https://eidas.eduid.docker/
              # old reset password
              password_service_url: https://dashboard.eduid.docker/services/security/
              # new reset password
              reset_password_url: https://idp.eduid.docker/services/reset-password/
              token_verify_idp: http://dev.test.swedenconnect.se/idp
              password_length: 12
              password_entropy: 25
              chpass_timeout: 600
              proofing_methods:
                  - letter
                  - lookup_mobile
                  - oidc
                  - eidas
              default_country_code: 46
              # This key is for signup.eduid.docker
              recaptcha_public_key: 6Lf5rCETAAAAAAW6UP4o59VSNEWG7RrzY_b5uH_M
              reset_passwd_url: https://html.eduid.docker/reset-password/
              # Login config
              login_base_url: https://idp.eduid.docker/services/idp
              login_next_url: https://idp.eduid.docker/services/idp/next
              error_info_url: https://idp.eduid.docker/services/idp/error_info
              eduid_site_name: eduID Developer
              eduid_site_url: https://html.eduid.docker
              signup_url: https://signup.eduid.docker/
              reset_password_link: https://html.eduid.docker/reset-password/
        idp:
            server_name: idp.eduid.docker
            application_root: /
            pysaml2_config: /opt/eduid/eduid-idp/etc/idp_pysaml2_settings.py
            mongo_uri: mongodb://eduid_idp:eduid_idp_pw@mongodb.eduid_dev/
            userdb_mongo_uri: mongodb://eduid_idp:eduid_idp_pw@mongodb.eduid_dev/eduid_am
            userdb_mongo_database: eduid_am
            sso_session_mongo_uri: mongodb://eduid_idp:eduid_idp_pw@mongodb.eduid_dev/eduid_idp
            authn_info_mongo_uri: mongodb://eduid_idp:eduid_idp_pw@mongodb.eduid_dev/eduid_idp_authninfo
            password_reset_link: https://dashboard.eduid.docker/services/security/reset-password
            signup_link: https://signup.eduid.docker/
            dashboard_link: https://dashboard.eduid.docker/
            student_link: https://html.eduid.docker/index.html
            technicians_link: https://html.eduid.docker/tekniker.html
            staff_link: https://html.eduid.docker/personal.html
            faq_link: https://html.eduid.docker/faq.html
            privacy_link: https://html.eduid.docker/privacy.html
            static_link: https://html.eduid.docker/static
            base_url: https://idp.eduid.docker/
            # uncomment login_bundle_url to enable the IdP API (and disable the template IdP)
            login_bundle_url: https://html.eduid.docker/login
            other_device_url: https://html.eduid.docker/login/other
            default_eppn_scope: local.eduid.se
            login_state_ttl: 1
            status_test_usernames: ['f-testuser1@spam.thulin.net']
            default_scoped_affiliation: affiliate@local.eduid.se
            max_authn_failures_per_month: 50
            vccs_url: 'http://vccs:8080/'
            shared_session_cookie_name: sessid
            shared_session_secret_key: supersecretkey
            tou_reaccept_interval: 604800  # 1 week
            #tou_reaccept_interval: 60  # 1 min
            u2f_valid_facets:
                - https://dashboard.dev.eduid.se
                - https://idp.dev.eduid.se
            other_device_logins_ttl: PT3M
            other_device_secret_key: 'lx0sg0g21QUkiu9JAPfhx4hJ5prJtbk1PPE-OBvpiAk='
            known_devices_secret_key: 'WwemHQgPm1hpx41NYaVBQpRV7BAq0OMtfF3k4H72J7c='
            known_devices_feature_enabled: true
            logging_config:
              loggers:
                'saml2':
                  level: 'WARNING'
                'xmlsec':
                  level: 'INFO'
                'urllib3':
                  level: 'INFO'
                'eduid.webapp.common.session':
                  level: 'INFO'
            allow_other_device_logins: true
        reset_password:
            server_name: idp.eduid.docker
            mongo_uri: mongodb://eduid_reset_password:eduid_reset_password_pw@mongodb.eduid_dev
            application_root: /services/reset-password
            log_level: DEBUG
            logger_name: reset_password
            app_name: reset_password
            email_code_timeout: 7200
            phone_code_timeout: 600
            password_entropy: 25
            password_length: 12
            password_salt_length: 32
            password_hash_length: 32
            password_generation_rounds: 32
            phone_verification_timeout: 24
            chpass_timeout: 600
            vccs_url: http://vccs:8080/
            u2f_valid_facets:
                - https://dashboard.dev.eduid.se
                - https://idp.dev.eduid.se
            password_reset_link: https://html.eduid.docker/reset-password/email-code
    queue:
      common:
        environment: dev
        log_level: DEBUG
        logger_name: queue
      scim_event_worker:
        mongo_uri: mongodb://eduid_queue:eduid_queue_pw@mongodb.eduid_dev
        mongo_collection: message
      mail_worker:
        debug: true
        mongo_uri: mongodb://eduid_queue:eduid_queue_pw@mongodb.eduid_dev
        mongo_collection: message
        logging_config:
         'root':
            handlers: [file, console]
         handlers:
            file:
              class: 'logging.handlers.RotatingFileHandler'
              filename: '/var/log/eduid/queue_mail_worker.log'
              formatter: 'default'
              filters: ['app_filter']
              maxBytes: 1024
              backupCount: 0

      sink_worker:
        log_level: INFO
        logging_config:
          loggers:
            'eduid.queue.workers.base':
              level: 'WARNING'
        mongo_uri: mongodb://eduid_queue:eduid_queue_pw@mongodb.eduid_dev
        mongo_collection: test
        log_level: INFO
        logging_config:
          loggers:
            'eduid.queue.workers.base':
              level: 'WARNING'

    worker:
        common:
            celery:
                accept_content: ["application/json"]
                broker_url: redis://redis.eduid_dev:6379/1
                result_backend: redis://redis.eduid_dev:6379/1
                broker_transport_options:
                    fanout_patterns: true
                # Workaround for Celery 4.2.1 not issuing AMQP heartbeats
                #broker_heartbeat: 0
            environment: 'dev'
        am:
            mongo_uri: mongodb://eduid_am:eduid_am_pw@mongodb/eduid_am
            new_user_date: '2001-01-01'
            action_plugins:
                - "tou"
        msg:
            mongo_uri: mongodb://mongodb/eduid_msg
            mongo_dbname: eduid_msg
            sms_sender: 'eduID'
            template_dir: '/opt/eduid/eduid-msg/etc/templates'
            devel_mode: true
            audit: true
            mail_host: 'localhost'
            mail_port: 25
            mail_starttls: false
        lookup_mobile:
            mongo_uri: 'mongodb://eduid_lookup_mobile:eduid_lookup_mobile_pw@mongodb/eduid_lookup_mobile'
            transaction_audit: true
            devel_mode: true
            teleadress_client_user: 'TEST'
            teleadress_client_password: 'TEST'

