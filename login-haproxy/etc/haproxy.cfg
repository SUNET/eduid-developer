global
    log stdout  format raw  local0  debug

    daemon
    maxconn 256
    #stats socket /tmp/socket
    #server-state-file /tmp/server_state

    #user x
    group www-data

    # Default SSL material locations
    ca-base /etc/ssl/certs
    crt-base /etc/ssl/private

    ssl-default-bind-ciphers ECDH+AESGCM:DH+AESGCM:ECDH+AES256:DH+AES256:ECDH+AES128:DH+AES:ECDH+3DES:DH+3DES:RSA+AESGCM:RSA+AES:RSA+3DES:!aNULL:!MD5:!DSS
    ssl-default-bind-options no-sslv3
    tune.ssl.default-dh-param 2048

    max-spread-checks 10s
    spread-checks 5

defaults
    log global
    mode http
    option httplog
    option dontlognull
    timeout check 5s
    timeout connect 4s
    timeout client 17s
    timeout server 17s
    timeout http-request 5s
    balance roundrobin

    # never fail on address resolution
    default-server init-addr libc,none

resolvers docker_dns
    parse-resolv-conf
    accepted_payload_size 8192

# Redirect _everything_ to HTTPS
frontend http-frontend
    bind 0.0.0.0:80
    bind :::80

    redirect scheme https code 301

frontend login-http
    bind *:443  ssl  crt /etc/ssl/login.pem  alpn h2,http/1.1
    stats enable
    timeout http-request 10s
    timeout http-keep-alive 4s

    option forwardfor
    http-request set-header X-Forwarded-Proto https
    http-request set-header X-Forwarded-Host %[req.hdr(Host)]

    # The information is intended for a single user and must not
    # be cached by a shared cache and should always be revalidated.
    http-response set-header Cache-Control "no-cache, no-store, must-revalidate"
    http-response set-header Pragma "no-cache"
    http-response set-header Expires "0"

    acl is_login path_beg               /login
    acl is_login path_beg               /reset-password
    acl should_redirect path            / OR ""
    http-request redirect location /login if should_redirect
    use_backend favicon if { path /favicon.ico }

    use_backend jsconfig if { path_beg /services/jsconfig/ }
    use_backend reset_password if { path_beg /services/reset-password/ }
    use_backend idp if { path_beg /services/idp }
    use_backend load_login if is_login

# make browsers load the js app
backend load_login
    http-request set-path /static/front-build/login.dev.html?%[query]
    http-response set-header Cache-Control no-cache
    server html html.eduid.docker:443 ssl verify none  check resolvers docker_dns  init-addr none

backend reset_password
    server reset_password eduid_reset_password_1:8080 check resolvers docker_dns  init-addr none

backend idp
    # Remove /services/idp from the path. We can't use application_root in the IdP since the SAML
    # endpoints does not start with /services.
    http-request set-path "%[path,regsub(^/services/idp/,/)]"
    server idp1 eduid_idp_1:8080 check resolvers docker_dns  init-addr none

backend jsconfig
    server jsconfig eduid_jsconfig_1:8080 check resolvers docker_dns  init-addr none

backend favicon
    server html html.eduid.docker:443 ssl verify none  check resolvers docker_dns  init-addr none

frontend LB-http
    bind *:9000
    default_backend LB

backend LB
    stats enable
    #stats hide-version
    stats uri /haproxy_stats
