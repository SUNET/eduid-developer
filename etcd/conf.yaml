eduid:
    webapp:
        common:
            # enable disable debug mode
            DEBUG: yes
            # the domain for the session cookie. If this is not set, the cookie will
            # be valid for all subdomains of SERVER_NAME.
            SESSION_COOKIE_NAME: sessid
            SESSION_COOKIE_DOMAIN: .eduid.docker
            SESSION_COOKIE_SECURE: 0
            # The URL scheme that should be used for URL generation if no URL scheme is
            # available. This defaults to http
            PREFERRED_URL_SCHEME: http
            # Redis config
            REDIS_HOST: redis.eduid_dev
            REDIS_PORT: 6379
            REDIS_DB: 0
            SAML2_LOGOUT_REDIRECT_URL: http://html.eduid.docker/
            TOKEN_SERVICE_URL: http://dashboard.eduid.docker:8080/services/authn
            CELERY_CONFIG:
                accept_content: ["application/json"]
                broker_url: redis://redis.eduid_dev:6379/1
                result_backend: redis://redis.eduid_dev:6379/1
                broker_transport_options:
                    # backwards incompatible setting that the documentation says will be the default in the future
                    fanout_prefix: true
                #CELERY_RESULT_BACKEND: amqp
                #CELERY_TASK_SERIALIZER: json
                # Avoid broken connections across firewall by disabling pool
                # http://docs.celeryproject.org/en/latest/configuration.html#broker-pool-limit
                #BROKER_POOL_LIMIT: 0
                task_routes:
                  'eduid_am.*': {'queue': 'am'}
                  'eduid_msg.*': {'queue': 'msg'}
                  'eduid_letter_proofing.*': {'queue': 'letter_proofing'}
            AVAILABLE_LANGUAGES:
                en: English
                sv: Svenska
            MAIL_DEFAULT_FROM: info@eduid.se
            EDUID_SITE_URL: http://html.eduid.docker
            EDUID_STATIC_URL: http://html.eduid.docker/static/
            DASHBOARD_URL: http://dashboard.eduid.docker:8080/profile/
            RESET_PASSWD_URL: http://dashboard.eduid.docker:8080/services/security/reset-password
            # set absolute URL so it can be included in emails
            SIGNUP_URL: http://signup.eduid.docker:8080/register/
            NO_AUTHN_URLS:
              - "^/status/healthy$"
              - "^/status/sanity-check$"
            ACTION_PLUGINS:
              - tou
              - mfa
            # ENVIRONMENT=(dev|staging|pro)
            ENVIRONMENT: dev
            TOU_VERSION: test-version
            CURRENT_TOU_VERSION: test-version  # backwards compat
        authn:
            SERVER_NAME: dashboard.eduid.docker:8080
            APPLICATION_ROOT: /services/authn
            SECRET_KEY: supersecretkey
            MONGO_URI: mongodb://eduid_authn:eduid_authn_pw@mongodb.eduid_dev
            LOGGER_NAME: authn
            LOG_LEVEL: DEBUG
            # SAML2 and SP config
            SAML2_LOGIN_REDIRECT_URL: /
            SAML2_SETTINGS_MODULE: /opt/eduid/etc/saml2_settings.py
            SAML2_USER_MAIN_ATTRIBUTE: eduPersonPrincipalName
            SAML2_STRIP_SAML_USER_SUFFIX: "@local.eduid.se"
            TOKEN_LOGIN_SHARED_KEY: shared_secret_shared_secret_sh4r
            TOKEN_LOGIN_SUCCESS_REDIRECT_URL: http://dashboard.eduid.docker:8080
            TOKEN_LOGIN_FAILURE_REDIRECT_URL: http://html.eduid.docker/
            SAFE_RELAY_DOMAIN: eduid.docker:8080
            SIGNUP_AND_AUTHN_SHARED_KEY: dGVzdCBrZXkgICAgICAgICAgICAgICAgICAgICAgICA=
        letter_proofing:
            SERVER_NAME: dashboard.eduid.docker:8080
            APPLICATION_ROOT: /services/letter-proofing
            SECRET_KEY: supersecretkey
            LOGGER_NAME: letter_proofing
            LOG_LEVEL: DEBUG
            MONGO_URI: mongodb://eduid_idproofing_letter:eduid_idproofing_letter_pw@mongodb.eduid_dev
            #MSG_BROKER_URL: amqp://eduid:eduid_pw@rabbitmq/msg
            #AM_BROKER_URL: amqp://eduid:eduid_pw@rabbitmq/am
            # Setting EKOPOST_DEBUG_PDF to a path means that the other EKOPOST settings will be ignored
            # and that the pdf only will be written to to the supplied path, not sent to the letter service.
            EKOPOST_DEBUG_PDF: /opt/eduid/run/debug_letter.pdf
            EKOPOST_API_URI: https://api.ekopost.se
            EKOPOST_API_VERIFY_SSL: yes
            EKOPOST_API_USER: ekopost_user
            EKOPOST_API_PW: ekopost_pw
        oidc_proofing:
            SERVER_NAME: dashboard.eduid.docker:8080
            APPLICATION_ROOT: /services/oidc-proofing
            SECRET_KEY: supersecretkey
            LOGGER_NAME: oidc_proofing
            LOG_LEVEL: DEBUG
            CLIENT_REGISTRATION_INFO:
                client_id: client1
                client_secret: abcdef
            PROVIDER_CONFIGURATION_INFO:
                issuer: http://turq:13085/op/
            MONGO_URI: mongodb://eduid_oidc_proofing:eduid_oidc_proofing_pw@mongodb.eduid_dev
            #AM_BROKER_URL: amqp://eduid:eduid_pw@rabbitmq/am
            #MSG_BROKER_URL: amqp://eduid:eduid_pw@rabbitmq/msg
        orcid:
            SERVER_NAME: dashboard.eduid.docker:8080
            APPLICATION_ROOT: /services/orcid
            SECRET_KEY: supersecretkey
            LOGGER_NAME: orcid
            LOG_LEVEL: DEBUG
            CLIENT_REGISTRATION_INFO:
                client_id: client1
                client_secret: abcdef
            PROVIDER_CONFIGURATION_INFO:
                issuer: https://sandbox.orcid.org
            MONGO_URI: mongodb://eduid_orcid:eduid_orcid_pw@mongodb.eduid_dev
            #AM_BROKER_URL: amqp://eduid:eduid_pw@rabbitmq/am
        eidas:
            SERVER_NAME: eidas.eduid.docker:8080
            APPLICATION_ROOT: /
            SECRET_KEY: supersecretkey
            LOGGER_NAME: eidas
            LOG_LEVEL: DEBUG
            MONGO_URI: mongodb://eduid_eidas:eduid_eidas_pw@mongodb.eduid_dev
            #AM_BROKER_URL: amqp://eduid:eduid_pw@rabbitmq/am
            #MSG_BROKER_URL: amqp://eduid:eduid_pw@rabbitmq/msg
            # SAML2 and SP config
            SAML2_SETTINGS_MODULE: /opt/eduid/etc/saml2_settings.py
            SAFE_RELAY_DOMAIN: eduid.docker:8080
        lookup_mobile_proofing:
            SERVER_NAME: dashboard.eduid.docker:8080
            APPLICATION_ROOT: /services/lookup-mobile-proofing
            SECRET_KEY: supersecretkey
            LOGGER_NAME: lookup_mobile_proofing
            LOG_LEVEL: DEBUG
            MONGO_URI: mongodb://eduid_lookup_mobile_proofing:eduid_lookup_mobile_proofing_pw@mongodb.eduid_dev
            #AM_BROKER_URL: amqp://eduid:eduid_pw@rabbitmq/am
            #MSG_BROKER_URL: amqp://eduid:eduid_pw@rabbitmq/msg
            #LOOKUP_MOBILE_BROKER_URL: amqp://eduid:eduid_pw@rabbitmq/lookup_mobile
        support:
            SERVER_NAME: support.eduid.docker:8080
            SECRET_KEY: supersecretkey
            LOGGER_NAME: support
            LOG_LEVEL: DEBUG
            MONGO_URI: mongodb://eduid_support:eduid_support_pw@mongodb.eduid_dev
            STATIC_URL: http://html.eduid.docker/static/
            SUPPORT_PERSONNEL:
              - mojud-dosiv
        personal_data:
            SERVER_NAME: dashboard.eduid.docker:8080
            APPLICATION_ROOT: /services/personal-data
            SECRET_KEY: supersecretkey
            MONGO_URI: mongodb://eduid_personal_data:eduid_personal_data_pw@mongodb.eduid_dev
            LOG_LEVEL: DEBUG
            LOGGER_NAME: personal_data
            #AM_BROKER_URL: amqp://eduid:eduid_pw@rabbitmq/am
        email:
            SERVER_NAME: dashboard.eduid.docker:8080
            APPLICATION_ROOT: /services/email
            SECRET_KEY: supersecretkey
            MONGO_URI: mongodb://eduid_email:eduid_email_pw@mongodb.eduid_dev
            LOG_LEVEL: DEBUG
            LOGGER_NAME: email
            #AM_BROKER_URL: amqp://eduid:eduid_pw@rabbitmq/am
            #MSG_BROKER_URL: amqp://eduid:eduid_pw@rabbitmq/msg
        phone:
            SERVER_NAME: dashboard.eduid.docker:8080
            APPLICATION_ROOT: /services/phone
            SECRET_KEY: supersecretkey
            MONGO_URI: mongodb://eduid_phone:eduid_phone_pw@mongodb.eduid_dev
            LOG_LEVEL: DEBUG
            LOGGER_NAME: phone
            #AM_BROKER_URL: amqp://eduid:eduid_pw@rabbitmq/am
            #MSG_BROKER_URL: amqp://eduid:eduid_pw@rabbitmq/msg
            PHONE_VERIFICATION_TIMEOUT: 24
        security:
            SERVER_NAME: dashboard.eduid.docker:8080
            APPLICATION_ROOT: /services/security
            SECRET_KEY: supersecretkey
            MONGO_URI: mongodb://eduid_security:eduid_security_pw@mongodb.eduid_dev
            LOG_LEVEL: DEBUG
            LOGGER_NAME: security
            #AM_BROKER_URL: amqp://eduid:eduid_pw@rabbitmq/am
            #MSG_BROKER_URL: amqp://eduid:eduid_pw@rabbitmq/msg
            VCCS_URL: 'http://turq:13085/'
            PASSWORD_LENGTH: 12
            PASSWORD_ENTROPY: 25
            CHPASS_TIMEOUT: 600
            U2F_APP_ID: https://dashboard.dev.eduid.se
            U2F_MAX_ALLOWED_TOKENS: 50
            U2F_MAX_DESCRIPTION_LENGTH: 64
            U2F_FACETS:
                - https://dashboard.dev.eduid.se
                - https://idp.dev.eduid.se
        signup2:
            SERVER_NAME: signup.eduid.docker:8080
            APPLICATION_ROOT: /services/signup
            SECRET_KEY: supersecretkey
            MONGO_URI: mongodb://eduid_signup:eduid_signup_pw@mongodb.eduid_dev
            LOG_LEVEL: DEBUG
            LOGGER_NAME: signup2
            #AM_BROKER_URL: amqp://eduid:eduid_pw@rabbitmq/am
            #MSG_BROKER_URL: amqp://eduid:eduid_pw@rabbitmq/msg
            PASSWORD_LENGTH: 10
            VCCS_URL: 'http://turq:13085/'
            TOU_URL: http://idp.eduid.docker:8080/services/actions2/get-tous/
            AUTH_TOKEN_URL: http://dashboard.eduid.docker:8080/services/authn/token-login
            SIGNUP_AND_AUTHN_SHARED_KEY: dGVzdCBrZXkgICAgICAgICAgICAgICAgICAgICAgICA=
            DEFAULT_FINISH_URL: https://www.eduid.se/
             # These keys are for signup.eduid.docker:8080
            RECAPTCHA_PUBLIC_KEY: 6Lf5rCETAAAAAAW6UP4o59VSNEWG7RrzY_b5uH_M
            RECAPTCHA_PRIVATE_KEY: 6Lf5rCETAAAAAAjQbw1-3j_U2xTZSrDYXlWjBQxt
            STUDENTS_LINK: https://www.eduid.se/index.html
            TECHNICIANS_LINK: https://www.eduid.se/tekniker.html
            STAFF_LINK: https://www.eduid.se/personal.html
            FAQ_LINK: https://www.eduid.se/faq.html
        jsconfig:
            # this is configuration for the flask app serving the jsconfig microservice
            SERVER_NAME: dashboard.eduid.docker:8080
            APPLICATION_ROOT: /services/jsconfig
            SECRET_KEY: supersecretkey
            LOG_LEVEL: DEBUG
            LOGGER_NAME: jsconfig
        jsapps:
            # this is the configuration for the js apps, that is sent by the jsconfig
            # microservice to the js apps.
            # Take care not to put any sensitive data here.
            AVAILABLE_LANGUAGES:
                - [en, English]
                - [sv, Svenska]
            DASHBOARD_URL: /profile/
            PERSONAL_DATA_URL: /services/personal-data/
            EMAILS_URL: /services/email/
            MOBILE_URL: /services/phone/
            OIDC_PROOFING_URL: /services/oidc-proofing/proofing/
            LOOKUP_MOBILE_PROOFING_URL: /services/lookup-mobile-proofing/proofing/
            LETTER_PROOFING_URL: /services/letter-proofing/
            SECURITY_URL: /services/security/
            TOKEN_SERVICE_URL: /services/authn/
            OIDC_PROOFING_FREJA_URL: /services/oidc-proofing/freja/proofing/
            ORCID_URL: /services/orcid/
            EIDAS_URL: http://eidas.eduid.docker:8080/
            TOKEN_VERIFY_IDP: http://dev.test.swedenconnect.se/idp
            PASSWORD_LENGTH: 12
            PASSWORD_ENTROPY: 25
            CHPASS_TIMEOUT: 600
            PROOFING_METHODS:
                - letter
                - lookup_mobile
                - oidc
                - eidas
            DEFAULT_COUNTRY_CODE: 46
            DEBUG: yes
            STATIC_STUDENTS_URL: http://html.eduid.docker/
            STATIC_TECHNICIANS_URL: http://html.eduid.docker/tekniker.html
            STATIC_STAFF_URL: http://html.eduid.docker/personal.html
            STATIC_FAQ_URL: http://html.eduid.docker/faq.html
        actions2:
            SERVER_NAME: idp.eduid.docker:8080
            APPLICATION_ROOT: /services/actions2
            LOG_LEVEL: DEBUG
            SECRET_KEY: supersecretkey
            TOKEN_LOGIN_SHARED_KEY: dGVzdCBrZXkgICAgICAgICAgICAgICAgICAgICAgICA=
            MONGO_URI: mongodb://eduid_actions:eduid_actions_pw@mongodb.eduid_dev
            #AM_BROKER_URL: amqp://eduid:eduid_pw@rabbitmq/am
            BUNDLES_URL: http://html.eduid.docker/static/front-build/
            IDP_URL: http://idp.eduid.docker:8080/sso/redirect
            U2F_APP_ID: https://dashboard.dev.eduid.se
            U2F_VALID_FACETS:
                - https://dashboard.dev.eduid.se
                - https://idp.dev.eduid.se

    worker:
        common:
            CELERY:
                accept_content: ["application/json"]
                broker_url: redis://redis.eduid_dev:6379/1
                result_backend: redis://redis.eduid_dev:6379/1
                broker_transport_options:
                    fanout_patterns: true
                # Workaround for Celery 4.2.1 not issuing AMQP heartbeats
                #broker_heartbeat: 0
        am:
            MONGO_URI: mongodb://eduid_am:eduid_am_pw@mongodb/eduid_am
            NEW_USER_DATE: '2001-01-01'
            ACTION_PLUGINS:
                - "tou"
        msg:
            MONGO_URI: mongodb://mongodb/eduid_msg
            sms_sender: 'eduID'
            template_dir: '/opt/eduid/eduid-msg/etc/templates'
            devel_mode: true
            audit: true
            mail_host: 'localhost'
            mail_port: 25
            mail_starttls: false
        lookup_mobile:
            MONGO_URI: 'mongodb://eduid_lookup_mobile:eduid_lookup_mobile_pw@mongodb/eduid_lookup_mobile'
            transaction_audit: true
            devel_mode: true
            TELEADRESS_CLIENT_USER: 'TEST'
            TELEADRESS_CLIENT_PASSWORD: 'TEST'
