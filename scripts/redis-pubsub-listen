#!/usr/bin/env python3

import sys
import json
import base64
import pprint
import logging

import redis

host = '172.16.10.252'  # redis.eduid.docker
channel = '/{db}.*'
channel = '*elery*'


def _get_logger(myname, debug):
    level = logging.INFO
    if debug:
        level = logging.DEBUG
    logging.basicConfig(level = level, stream = sys.stderr,
                        format='%(asctime)s: %(name)s: %(levelname)s %(message)s')
    return logging.getLogger(myname)


logger = _get_logger('redis-pubsub-listen', True)

redis = redis.client.StrictRedis(host=host, db=1)
pubsub = redis.pubsub(ignore_subscribe_messages=False)

if channel.endswith('*'):
    res = pubsub.psubscribe(channel)
else:
    res = pubsub.subscribe(channel)

logger.debug('Subscribe result: {}'.format(res))

while True:
    for msg in pubsub.listen():
        if msg['type'] not in ['message', 'pmessage']:
            logger.debug('Ignoring non-message: {!r}'.format(msg))
            continue
        if msg['channel'].endswith(b'heartbeat'):
            logger.debug('heartbeat')
            continue
        try:
            data = json.loads(msg['data'].decode('utf8'))
            msg.pop('data')
            try:
                # try decoding base64 encoded body
                data['body'] = ('b64', base64.b64decode(data['body']))
            except:
                pass
            logger.debug('Received {} with JSON data:\n{}'.format(msg, pprint.pformat(data, width=120)))
        except Exception as exc:
            logger.debug('Failed JSON parsing data: {}'.format(exc))
            logger.debug('Received:\n{}'.format(pprint.pformat(msg, width=120)))
