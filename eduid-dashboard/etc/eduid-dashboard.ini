[app:eduid-dashboard]
use = egg:eduid-dashboard

# Common Pyramid options
pyramid.reload_templates = true
pyramid.debug_authorization = false
pyramid.debug_notfound = false
pyramid.debug_routematch = false
pyramid.default_locale_name = en
pyramid.includes =
#    pyramid_debugtoolbar

debugtoolbar.hosts = 172.16.0.0/12

# Site options
site.name = eduID
dashboard_hostname = dashboard
dashboard_baseurl = http://dashboard.eduid.docker:8080
personal_dashboard_base_url = http://dashboard.eduid.docker/
signup_base_url = http://signup.eduid.docker:8080/
student_link = http://html.eduid.docker/index.html
technicians_link = http://html.eduid.docker/tekniker.html
staff_link = http://html.eduid.docker/personal.html
faq_link = http://html.eduid.docker/faq.html
privacy_link = http://html.eduid.docker/privacy.html

letter_service_url = http://idproofing-letter.eduid_dev:8080/

token_service_url = http://dashboard.eduid.docker:8080/services/authn

# URL for static assets. If this setting is unset,
# static urls will be built just as any other url,
# and therefore assets will be fetched from pyramid;
# If it is set, they will be fetched from wherever
# this setting mandate.
static_url = http://html.eduid.docker/static

# Do not try to send mail or check nin_reachable
developer_mode = true

# workmode = admin
workmode = personal

cache_user_in_session = true

polling_timeout_for_admin = 5000

# timeout for verification codes (measured in minutes)
verification_code_timeout = 1440

# Password reset link expire time in minutes
password_reset_timeout = 120

### Permissions
#
# permissions_mapping =
#     personal =
#     helpdesk = urn:mace:eduid.se:role:ra
#     admin = urn:mace:eduid.se:role:admin
#
# available_permissions =
#     urn:mace:eduid.se:role:ra
#     urn:mace:eduid.se:role:admin
#     urn:mace:eduid.se:role:manager
#     urn:mace:eduid.se:role:student
#     urn:mace:eduid.se:role:teacher

enable_mm_verification = false
nin_service_name = Min myndighetspost
nin_service_url = http://minmyndighetspost.se/
mobile_service_name = TeleAdress

# Enable the postal address retrieval after the nin verification is completed
# Enabled by default
enable_postal_address_retrieve = false

jinja2.directories = eduiddashboard:templates
jinja2.undefined = strict
jinja2.i18n.domain = eduid-dashboard

# i18n
locale_dirs = eduiddashboard:locale
available_languages =
  en = English
  sv = Svenska

# Default postal address country
default_country_location = SE

# Celery broker
broker_url = amqp://eduid:eduid_pw@rabbitmq/am
msg_broker_url = amqp://eduid:eduid_pw@rabbitmq/msg
lookup_mobile_broker_url = amqp://eduid:eduid_pw@rabbitmq/lookup_mobile

# Sessions
session.secret = supersecretkey
session.key = sessid
session.cookie_domain = .eduid.docker
session.cookie_path = /
session.cookie_max_age = 3600
session.cookie_httponly = true
# Set session.secure to true when SSL is enabled
session.cookie_secure = false

redis_host = redis
redis_port = 6379
redis_db = 0

# Remote Authentication
auth_tk_secret = tk_secret_aingooN3aiphieweek6j
auth_shared_secret = shared_secret_Eifool0ua0eiph7ooch0

# email server
mail.host = localhost
mail.port = 25
mail.default_sender = no-reply@eduid.se

# Database
mongo_uri = mongodb://eduid_dashboard:eduid_dashboard_pw@mongodb/eduid_dashboard
mongo_uri_am = mongodb://eduid_dashboard:eduid_dashboard_pw@mongodb/eduid_am
mongo_uri_authninfo = mongodb://eduid_dashboard:eduid_dashboard_pw@mongodb/eduid_idp_authninfo

#mongo_replicaset = rs0

# Saml2
saml2.settings_module = /opt/eduid/eduid-dashboard/etc/dashboard_pysaml2_settings.py
saml2.login_redirect_url = /
saml2.logout_redirect_url = http://html.eduid.docker/
# The attribute released by the IdP that we should use to locate the user logging in.
saml2.user_main_attribute = eduPersonPrincipalName
saml2.strip_saml_user_suffix = @local.eduid.se

# Allowed countries for the postal address
#allowed_countries = Norway, Sweden

# Default country code in phone numbers
default_country_code = +46

# VCCS (Credentials manager)
vccs_url = http://turq:13085/

# Length of generated passwords
password_length = 12
password_entropy = 40

# This filter, if inserted in pipeline:main, will produce access_log data
#[filter:translogger]
#use = egg:Paste#translogger

#[filter:raven]
## centralized logging of exceptions
#use = egg:raven#raven
#dsn = https://foo:bar@raven/2
#timeout = 3
#include_paths = eduiddashboard
##include_paths = my.package, my.other.package
##exclude_paths = my.package.crud


# webpack bundle to include in base tempate
js_bundle_default = dashboard-bundle.dev

# dict from emails to js bundles, to be able to specify different bundles
# for different users.
js_bundle_people =
#    john@example.com = dashboard-dundle-1

# A/B testing for js bundles. Set it as a mapping of percentages to bundles,
# to specify the percentage of requests each bundle will be served.
# obviously the keys should add up to <= 100 (if <100, the remainder requests up
# to 100% will be served the default bundle).
js_bundle_abtesting =
#    10 = dashboard-dundle-2

# url to give to react apps for them to retrieve their configuration from the server.
jsconfig_url = /services/jsconfig/config


[filter:paste_prefix]
use = egg:PasteDeploy#prefix

[pipeline:main]
pipeline =
#     translogger
#    raven
    paste_prefix
    eduid-dashboard

[server:main]
use = egg:gunicorn#main
host = 0.0.0.0
port = 8080
forwarded_allow_ips = *
timeout = 120
workers = 2

# Begin logging configuration

[loggers]
keys = root, eduiddashboard, pycountry
#, sentry

[handlers]
keys = console
#, syslog, sentry

[formatters]
keys = generic
#, sentry

[logger_root]
level = DEBUG
handlers = console
#, sentry, syslog

[logger_waitress]
level = INFO

[logger_eduiddashboard]
level = DEBUG
handlers =
qualname = eduiddashboard

[logger_pycountry]
level = CRITICAL
handlers =
qualname = pycountry

#[logger_sentry]
#level = WARN
#handlers = console
#qualname = sentry.errors
#propagate = 0

[handler_console]
class = StreamHandler
args = (sys.stderr,)
level = NOTSET
formatter = generic

#[handler_sentry]
#class = raven.handlers.logging.SentryHandler
#args = ('https://foo:bar@raven/2',)
#level = WARNING
#formatter = sentry

#[handler_syslog]
#class = logging.handlers.SysLogHandler
#args = ('/dev/log',)
#level = INFO
#formatter = generic

[formatter_generic]
format = %(asctime)s %(levelname)-5.5s [%(name)s][%(threadName)s] %(message)s

#[formatter_sentry]
## Raven documentation says to use this format, not sure if it is mandated.
#format = %(asctime)s,%(msecs)03d %(levelname)-5.5s [%(name)s] %(message)s
#datefmt = %H:%M:%S

# End logging configuration
